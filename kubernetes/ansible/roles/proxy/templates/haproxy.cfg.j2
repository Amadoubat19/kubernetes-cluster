global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
frontend k8s_front
        bind {{ansible_default_ipv4.address}}:6443
        mode tcp
        default_backend k8s_backend
backend k8s_backend
        mode tcp
        balance roundrobin
        # k8s apiServer requires a host
        option httpchk GET /healthz HTTP/1.1\r\nHost:\ 192.168.1.21
        # disable ssl verification as we have self-signed certs
        {% for host in groups['masters'] %}
        server k8s_master_{{loop.index}} {{ host }}:6443 check check-ssl verify none
        {% endfor %}
        
frontend kubernetes-ingress-http
          bind *:80
          default_backend kubernetes-worker-nodes-http

backend kubernetes-worker-nodes-http
        balance leastconn
        option tcp-check
        {% for host in groups['workers'] %}
        server k8s_worker_{{loop.index}} {{ host }}:80 check check-ssl verify none
        {% endfor %}

listen stats
        # my server has 2 IP addresses, but you can use *:<port> to listen on all interfaces and on the specific port
        bind {{ansible_default_ipv4.address}}:8080
        mode http
        stats enable
        stats uri /